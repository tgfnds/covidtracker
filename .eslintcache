[{"/home/fercodes/wks/tgfnds/covidtracker/src/components/App/App.tsx":"1","/home/fercodes/wks/tgfnds/covidtracker/src/reportWebVitals.ts":"2","/home/fercodes/wks/tgfnds/covidtracker/src/index.tsx":"3","/home/fercodes/wks/tgfnds/covidtracker/src/components/WorldMap/WorldMap.tsx":"4","/home/fercodes/wks/tgfnds/covidtracker/src/utils/numbers.ts":"5","/home/fercodes/wks/tgfnds/covidtracker/src/components/Info/Chart.tsx":"6","/home/fercodes/wks/tgfnds/covidtracker/src/components/Info/Info.tsx":"7","/home/fercodes/wks/tgfnds/covidtracker/src/components/Info/LineChart2.tsx":"8","/home/fercodes/wks/tgfnds/covidtracker/src/components/Info/LineChart.tsx":"9","/home/fercodes/wks/tgfnds/covidtracker/src/components/Info/VictoryLineChart.tsx":"10","/home/fercodes/wks/tgfnds/covidtracker/src/components/Stats/Stats.tsx":"11","/home/fercodes/wks/tgfnds/covidtracker/src/components/Stats/StatsItem.tsx":"12","/home/fercodes/wks/tgfnds/covidtracker/src/context/SelectedCountryProvider.tsx":"13","/home/fercodes/wks/tgfnds/covidtracker/src/components/GlobalStats/GlobalStats.tsx":"14","/home/fercodes/wks/tgfnds/covidtracker/src/components/GlobalStats/GlobalStatsItem.tsx":"15"},{"size":1817,"mtime":1610109912440,"results":"16","hashOfConfig":"17"},{"size":425,"mtime":1609162313610,"results":"18","hashOfConfig":"17"},{"size":516,"mtime":1609164448470,"results":"19","hashOfConfig":"17"},{"size":3484,"mtime":1609936971410,"results":"20","hashOfConfig":"17"},{"size":906,"mtime":1609874087869,"results":"21","hashOfConfig":"17"},{"size":2617,"mtime":1609702052670,"results":"22","hashOfConfig":"17"},{"size":1473,"mtime":1609793718510,"results":"23","hashOfConfig":"17"},{"size":4523,"mtime":1609687717810,"results":"24","hashOfConfig":"17"},{"size":2081,"mtime":1609693067370,"results":"25","hashOfConfig":"17"},{"size":1239,"mtime":1609703008160,"results":"26","hashOfConfig":"17"},{"size":1830,"mtime":1610052279200,"results":"27","hashOfConfig":"17"},{"size":653,"mtime":1610052316010,"results":"28","hashOfConfig":"17"},{"size":936,"mtime":1609874540779,"results":"29","hashOfConfig":"17"},{"size":799,"mtime":1609957607480,"results":"30","hashOfConfig":"17"},{"size":756,"mtime":1610047599140,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"o66199",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/fercodes/wks/tgfnds/covidtracker/src/components/App/App.tsx",[],"/home/fercodes/wks/tgfnds/covidtracker/src/reportWebVitals.ts",[],"/home/fercodes/wks/tgfnds/covidtracker/src/index.tsx",[],"/home/fercodes/wks/tgfnds/covidtracker/src/components/WorldMap/WorldMap.tsx",["63","64","65","66"],"import axios from \"axios\";\nimport {\n  icon,\n  LeafletEvent,\n  LeafletEventHandlerFn,\n  LeafletMouseEvent,\n  Map,\n  point,\n} from \"leaflet\";\nimport { useEffect, useState } from \"react\";\nimport {\n  MapContainer,\n  TileLayer,\n  Marker,\n  Popup,\n  Tooltip,\n  ZoomControl,\n} from \"react-leaflet\";\nimport { useSelectedCountry } from \"../../context/SelectedCountryProvider\";\nimport { Country } from \"../../types\";\nimport \"./WorldMap.scss\";\n\ntype Props = {\n  countries: Country[];\n};\n\nconst WorldMap = ({ countries }: Props) => {\n  const DEFAULT_ZOOM = 4;\n  const MIN_ZOOM = 2;\n  const MAX_ZOOM = 10;\n  const [flagSize, setFlagSize] = useState<[number, number]>([\n    DEFAULT_ZOOM * 10,\n    DEFAULT_ZOOM * 7.5,\n  ]);\n  const {\n    selectedCountry,\n    setSelectedCountry,\n  } = useSelectedCountry() as import(\"../../context/SelectedCountryProvider\").ProviderValue;\n\n  const onZoom: LeafletEventHandlerFn = (e: LeafletEvent) => {\n    const newZoom = e.target._zoom;\n    setFlagSize([newZoom * 10, newZoom * 7.5]);\n  };\n\n  const onCreated = (map: Map) => {\n    map.on(\"zoomend\", (e) => onZoom(e));\n    map.on(\"click\", (e) => {\n      // might need to clear country selection\n    });\n  };\n\n  const onMarkerClicked = (e: LeafletMouseEvent) => {\n    const selected = countries.find(\n      (c) =>\n        c.countryInfo.lat === e.latlng.lat &&\n        c.countryInfo.long === e.latlng.lng\n    );\n    setSelectedCountry({\n      code: selected?.country ?? \"worldwide\",\n      data: selected ?? null,\n    });\n  };\n\n  return (\n    <div className=\"worldmap\">\n      <MapContainer\n        center={[48, 0]}\n        minZoom={MIN_ZOOM}\n        maxZoom={MAX_ZOOM}\n        zoom={DEFAULT_ZOOM}\n        scrollWheelZoom={true}\n        zoomControl={false}\n        whenCreated={(map) => onCreated(map)}\n      >\n        <ZoomControl position=\"topright\" />\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        {countries.map((country, index) => (\n          <Marker\n            key={country.countryInfo._id ?? `CustomId_${index}`}\n            riseOnHover\n            icon={icon({\n              iconUrl: country.countryInfo.flag,\n              iconSize: point(flagSize[0], flagSize[1]),\n            })}\n            eventHandlers={{ click: (e) => onMarkerClicked(e) }}\n            position={[country.countryInfo.lat, country.countryInfo.long]}\n          >\n            <Tooltip direction=\"top\">{country.country}</Tooltip>\n            {/* <Popup className=\"popup\">\n              <h1 className=\"popup__title\">{country.country}</h1>\n              <h4 className=\"popup__subtitle\">Pop: {country.population}</h4>\n              <div className=\"popup__info\">\n                <div className=\"row\">\n                  <div>Cases:</div>\n                  <div>{country.cases}</div>\n                </div>\n                <div className=\"row\">\n                  <div>Deaths:</div>\n                  <div>{country.deaths}</div>\n                </div>\n                <div className=\"row\">\n                  <div>Recovered:</div>\n                  <div>{country.recovered}</div>\n                </div>\n                <div className=\"row\">\n                  <div>Active:</div>\n                  <div>{country.active}</div>\n                </div>\n              </div>\n            </Popup> */}\n          </Marker>\n        ))}\n      </MapContainer>\n    </div>\n  );\n};\n\nexport default WorldMap;\n","/home/fercodes/wks/tgfnds/covidtracker/src/utils/numbers.ts",[],"/home/fercodes/wks/tgfnds/covidtracker/src/components/Info/Chart.tsx",["67","68"],"/home/fercodes/wks/tgfnds/covidtracker/src/components/Info/Info.tsx",[],"/home/fercodes/wks/tgfnds/covidtracker/src/components/Info/LineChart2.tsx",["69"],"/home/fercodes/wks/tgfnds/covidtracker/src/components/Info/LineChart.tsx",[],"/home/fercodes/wks/tgfnds/covidtracker/src/components/Info/VictoryLineChart.tsx",[],"/home/fercodes/wks/tgfnds/covidtracker/src/components/Stats/Stats.tsx",[],"/home/fercodes/wks/tgfnds/covidtracker/src/components/Stats/StatsItem.tsx",[],"/home/fercodes/wks/tgfnds/covidtracker/src/context/SelectedCountryProvider.tsx",[],"/home/fercodes/wks/tgfnds/covidtracker/src/components/GlobalStats/GlobalStats.tsx",[],"/home/fercodes/wks/tgfnds/covidtracker/src/components/GlobalStats/GlobalStatsItem.tsx",[],{"ruleId":"70","severity":1,"message":"71","line":1,"column":8,"nodeType":"72","messageId":"73","endLine":1,"endColumn":13},{"ruleId":"70","severity":1,"message":"74","line":10,"column":10,"nodeType":"72","messageId":"73","endLine":10,"endColumn":19},{"ruleId":"70","severity":1,"message":"75","line":15,"column":3,"nodeType":"72","messageId":"73","endLine":15,"endColumn":8},{"ruleId":"70","severity":1,"message":"76","line":36,"column":5,"nodeType":"72","messageId":"73","endLine":36,"endColumn":20},{"ruleId":"70","severity":1,"message":"77","line":2,"column":10,"nodeType":"72","messageId":"73","endLine":2,"endColumn":19},{"ruleId":"70","severity":1,"message":"78","line":6,"column":8,"nodeType":"72","messageId":"73","endLine":6,"endColumn":17},{"ruleId":"70","severity":1,"message":"79","line":2,"column":10,"nodeType":"72","messageId":"73","endLine":2,"endColumn":21},"@typescript-eslint/no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Popup' is defined but never used.","'selectedCountry' is assigned a value but never used.","'randomInt' is defined but never used.","'LineChart' is defined but never used.","'ScaleLinear' is defined but never used."]